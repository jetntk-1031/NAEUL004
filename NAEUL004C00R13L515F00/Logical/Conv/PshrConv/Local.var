(*2019-06-17*)
VAR
	tylocalPshrConv : tyPshrConv;
END_VAR
(**)
(*Local Action, State & Status*)
VAR
	udiStatus : UDINT := 0;
	a_sStatText : ARRAY[0..60] OF STRING[200] := ['Idling','Initializing','Initializing With Reverse','Initializing With Pusher','Initializing With Puller','Initializing With Reject','Initializing With Inspection','Entering Board','Entering Board Until Inlet Signal Off','Entering Board With Reverse','Reversing Board','Reversing Board With Immediate Start Conv','Entering Board With Puller','Entering Board With Reject','Entering Board With Inspection','Pre Exiting Board','Resuming Reject Board',2('Exiting Board'),2('Exiting Board With Pusher'),'Pusher Setting All Control','Pusher Resetting All Control','Pusher Setting Extend','Pusher Setting Retract','Pusher Extending','Pusher Retracting','Puller Setting All Control','Puller Resetting All Control','Puller Setting Extend','Puller Setting Retract','Puller Extending','Puller Retracting','Rotating Setting All Control','Rotating Resetting All Control','Rotating Setting Home','Rotating Setting Remote','Rotating Turning Home','Rotating Turning Remote','Reject Setting All Control','Reject Resetting All Control','Reject Setting Up','Reject Setting Down','Reject Going Up','Reject Going Down','Stopping','Stopping With Pusher','Stopping With Puller','Stopping With Reject','Turning On Motor Signal','Turning On Motor Direction','Turning Off Motor Signal','Turning Off Motor Direction','Turning On All Motor Output','Turning Off All Motor Output',6('')];
END_VAR
(**)
(*Local Alarm*)
VAR
	tyAlmData : tyAlmDat;
END_VAR
(**)
(*Local Output*)
VAR
	bHvBrd : BOOL;
	bRejHvBrd : BOOL;
	bInspHvBrd : BOOL;
	bGdBrd : BOOL;
	bLmtSenActivated : BOOL;
	bMtrSigOnOrLToR : BOOL;
	bMtrDirOrRToL : BOOL;
	bPshrExtCtrl : BOOL;
	bPshrRetCtrl : BOOL;
	bPshrTwoOutputControl : BOOL := FALSE;
	bPshrExtended : BOOL;
	bPshrRetracted : BOOL;
	bPullerExtCtrl : BOOL;
	bPullerRetCtrl : BOOL;
	bPullerTwoOutputControl : BOOL := TRUE;
	bPullerExtended : BOOL;
	bPullerRetracted : BOOL;
	bRotRemoteCtrl : BOOL;
	bRotTwoOutputControl : BOOL := FALSE;
	bRotAtRemote : BOOL;
	bRotAtHome : BOOL;
	bRejectUpCtrl : BOOL;
	bRejectDownCtrl : BOOL;
	bRejectTwoOutputControl : BOOL := TRUE;
	bRejectAtUp : BOOL;
	bRejectAtDown : BOOL;
	bPshrRetAllwTraverse : BOOL;
END_VAR
(**)
(*Local Input*)
VAR
	udiRstErr : UDINT := 0;
	bPrep : BOOL := TRUE;
	bEn : BOOL := TRUE;
	bDis : BOOL := FALSE;
	bManual : BOOL := FALSE;
	bLongBrdPrep : BOOL := FALSE;
	bLongBrdEn : BOOL := FALSE;
	bOnDirMod : BOOL := FALSE;
	diInitTm : DINT := 10000;
	diRevDlyTm : DINT := 500;
	tMtrOffDlyTm : TIME := T#0S;
	diTxInTimeOut : DINT := 10000;
	diTxOutTimeOut : DINT := 10000;
	eDirection : eConvDir := ConvDirLToR;
	bGdBrdInit : BOOL := TRUE;
	bGdBrdEnt : BOOL := TRUE;
	bLeftSen : BOOL := FALSE;
	bRightSen : BOOL := FALSE;
	bMiddleSen : BOOL := FALSE;
	bPullerChkSen : BOOL := FALSE;
	bPshrExtSen : BOOL := FALSE;
	bPshrRetSen : BOOL := FALSE;
	bPshrExtSafetySen : BOOL := TRUE;
	bPshrRetSafetySen : BOOL := TRUE;
	bPullerExtSen : BOOL := FALSE;
	bPullerRetSen : BOOL := FALSE;
	bPullerExtSafetySen : BOOL := TRUE;
	bPullerRetSafetySen : BOOL := TRUE;
	bRotHomeSen : BOOL := FALSE;
	bRotRemoteSen : BOOL := FALSE;
	bRotHomeSafetySen : BOOL := TRUE;
	bRotRemoteSafetySen : BOOL := TRUE;
	bRejectUpSen : BOOL := FALSE;
	bRejectDownSen : BOOL := FALSE;
	bRejectUpSafetySen : BOOL := TRUE;
	bRejectDownSafetySen : BOOL := TRUE;
	tPshrExtTO : TIME := T#20s;
	tPshrRetTO : TIME := T#20s;
	tPullerExtTO : TIME := T#20s;
	tPullerRetTO : TIME := T#20s;
	tRotHomeTO : TIME := T#20s;
	tRotRemoteTO : TIME := T#20s;
	tRejectUpTO : TIME := T#20s;
	tRejectDownTO : TIME := T#20s;
	bNtSettingsLoadDone : BOOL := TRUE;
END_VAR
(**)
(*Local*)
VAR
	bRstErr : BOOL;
	udiRstErrOld : UDINT;
	bInitDone : BOOL;
	bInitialDone : BOOL;
	usiStep : USINT;
	bInletOff : BOOL;
	fbWaitTm : TON := (PT:=T#1s);
	fbBoardOffTm : TON := (PT:=T#2s);
	eStatOld : eConvAction := ConvActIdle;
	fbInit : fbConvSenToSenTm;
	fbEnt : fbConvSenToSen;
	fbRev : fbConvSenToSenTm1;
	fbPreExit : fbConvSenToSenTm;
	fbExit : fbConvSenToSenOff;
	fbExit1 : fbConvSenToSenOff1;
	fbLongBrd : fbConvLongBrd;
	fbStop : fbConvMtrOff;
	fbPshrExtChk : fbPneuExtRetSenExtChk;
	fbPshrRetChk : fbPneuExtRetSenRetChk;
	fbPullerExtChk : fbPneuExtRetSenExtChk;
	fbPullerRetChk : fbPneuExtRetSenRetChk;
	fbRotHomeChk : fbPneuExtRetSenExtChk;
	fbRotRemoteChk : fbPneuExtRetSenRetChk;
	fbRejectUpChk : fbPneuExtRetSenExtChk;
	fbRejectDownChk : fbPneuExtRetSenRetChk;
	fbRightSenTm : TON := (PT:=T#1s);
	udiModuleNum : UDINT := 1501;
END_VAR
